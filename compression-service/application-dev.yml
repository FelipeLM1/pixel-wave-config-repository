server:
  servlet:
    context-path: /dev/pixelwave/api/compression
  port: "8081"
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      enabled: true
      show-details: always
resilience4j.circuitbreaker:
  instances:
    storage-service:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
        - java.lang.IllegalStateException
resilience4j.retry:
  instances:
    storage-service:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
        - java.lang.IllegalStateException
resilience4j.bulkhead:
  instances:
    storage-service:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20
resilience4j.thread-pool-bulkhead:
  instances:
    storage-service:
      maxThreadPoolSize: 10
      coreThreadPoolSize: 2
      queueCapacity: 30
resilience4j.ratelimiter:
  instances:
    storage-service:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s
